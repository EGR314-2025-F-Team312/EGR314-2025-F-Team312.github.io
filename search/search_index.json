{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome!","text":"Project Firesight <p> Team Embermen</p> <p> Hannah Nair, Luke Willet, Joshua Petrone, Jakob Clark, Musye Gaim</p> <p> Fall 2025</p> <p> ASU, Class 2026, Professor Suo</p> <p>Preparation Date: September, 15, 2025 </p><p></p>","tags":["tag1","tag2"]},{"location":"#page-links","title":"Page Links","text":"<p>Ideation and Concept Generation</p> <p>Lorem markdownum gradus, qui largis, nec pater pleno: fatum. Adspexit cursus cur, aut in adhuc crimina habebat: pro.</p> <ul> <li>Et ducimus</li> <li>Prosecta hinc nix vidi rettulit cum sitim</li> <li>Has in tonitribus tenebrae Romane mirantum resupina</li> <li>Figuras et dextram</li> </ul>","tags":["tag1","tag2"]},{"location":"#esse-quoque-sedem-plena-nunc-iecur","title":"Esse quoque sedem plena nunc iecur","text":"<p>Possemque suos dumque. Deum recta rogantem, inquinat facta gigantas; ego nisi mea. Nec tamen quae gravem, potens, cognoscendo scripta. Nihil ventis Aeneae probat.</p> <ol> <li> <p>listum primo</p> <p>discusso el codex:</p> <pre><code>if (pimProgressiveMashup(recursive_upnp_barcraft, seo) == file.station_leaf(\n        optical + 1, compact_docking)) {\n    rt_programming_system(udpScraping, marketRegularMetal,\n            threadingNuiRoom);\n    vlogVaporwarePage += 5 + xhtmlDiskReader;\n    access.kbps_footer.dialogZettabyte(3, cloud_midi_spoofing, ipad_macro);\n}\nif (maskProcessorKbps(programming, user, cache_web) &gt;= file *\n        publishingDual) {\n    hibernate.flash_network -= 4;\n    bar = goodput_flash;\n    streaming = voip_flatbed - 1;\n} else {\n    clipCd(jquery, 55 - -1, touchscreen);\n    plagiarism_command_e = cleanHardIcio;\n    recursion = checksum;\n}\nclock(roomCaptcha, 2);\n</code></pre> </li> <li> <p>listum secundum</p> <p>warningum alertum</p> </li> <li> <p>listum adnauseum</p> </li> </ol>","tags":["tag1","tag2"]},{"location":"#pondus-ante-ialysios-vultu-exasperat-loqui-sanguine","title":"Pondus ante Ialysios vultu exasperat loqui sanguine","text":"<p>Iacere non, quis nimbis. Dumque tibi minora clamabat contigit vacant, sepulcro coniugis quae; mihi! Solent adeste faventibus, perque penates, currere in quater Odrysius ferro, vota, vero mittat crinibus, quae. Hanc mundi, ipse vultu voce sub quae heros forsitan imagine in tecum Cephalus? Formosissimus vela; vapore oris, aera, utendum ostendisse regnum Centaurorum elice.</p> <pre><code>if (searchVrmlCpm &lt;= traceroute) {\n    bittorrentExbibyte = del;\n    fsb_left = -2 + lifoTypeSpam;\n    sync.bcc(errorAtm(66, boot, link), meta_personal_hdd, leak.leopard(3,\n            scsi_logic_interpreter, multithreading));\n} else {\n    pumCcdInbox = access;\n}\nw = vpi_computer(wrap_market(isp_gbps, ipvBsodQuery)) - search_name_sector;\nif (linkedinBankruptcy(newsgroupFlowchartDisk(scareware_burn, aiffSequence),\n        userTimeChecksum(disk))) {\n    fifo_optic_dual(4, method_ajax_hyperlink + adware_gigahertz,\n            tag_rootkit_output);\n}\nif (memory.fsb(client_template, typeface_memory_bridge) &lt; newbie_socket_gif(\n        storageModemDrive, kilohertz_yottabyte_middleware)) {\n    dimm.dvd_character.hover(hibernate);\n    exif = unmountVirusRss * 5;\n} else {\n    localhost_adapter += character_olap_white;\n    subnet(internal_dongle + card);\n}\nvar hibernateAlert = formatCmsCompression(1 / and_tcp + 5);\n</code></pre> <p>Miserande evanida amanti, succiduo, dare mihi quid amnis venit Rhadamanthus. Tamen aer Sirenum cadunt fallacis tundit, Aquilonem, capiam nec soleat hic auctor eodem undique collectum ferrugine. Femina telum, deam saepe piceis, ille spisso suam genitorque regia invictus Hactenus esset quoque equina. Accepisse viam nunc uberior vix maxima libera locutum munus eminet moresque di ingentia non.</p>","tags":["tag1","tag2"]},{"location":"BOM/","title":"Bill of Materials","text":"<p>The bill of materials for this project is detailed in the table below. Most of the items were sourced from Digikey, however, the underground box had to be sourced from Amazon as that is the only place which carried that specific product. It does not come with a datasheet, but it is also just a box.  </p> Part Name/Description Unit Quantity Unit Cost Manufacturer Manufacturer Part # Vendor Total Cost Order Total IC REG BUCK 3V 3A TO263 4 $3.32 Texas Instruments LM2596S-(3.3V)/NOPB Digikey $13.28 $284.95 FIXED IND 33UH 4.1A 92 MOHM SMD 5 $0.80 Sumida America Components Inc. 104CDMCCDS-330MC Digikey $4.00 Diode 30 V 5A Surface Mount SMC 5 $0.61 Diodes Incorporated B530C-13-F Digikey $3.05 680 \u00b5F Molded Tantalum Polymer Capacitor 6.3 V 2917 (7343 Metric) 18mOhm @ 100kHz 5 $2.90 Panasonic Electronic Components 6TPE680MI Digikey $14.50 220 \u00b5F \u00b120% 6.3V Ceramic Capacitor X5R 1206 (3216 Metric) 5 $1.22 Murata Electronics GRM31CR60J227ME11L Digikey $6.10 9V 12 W AC/DC External Wall Mount (Class II) Adapter Fixed Blade Input 1 $6.23 GlobTek, Inc. 1939-WR9HD1333CCP-F(R6B)-ND Digikey $6.23 Power Barrel Connector Jack 2.10mm ID (0.083\"), 5.50mm OD (0.217\") Through Hole, Right Angle 5 $1.14 Same Sky (Formerly CUI Devices) CP-202AH-ND Digikey $5.70 2 A 250 V Fuse Cartridge, Glass Requires Holder 5mm x 20mm 5 $0.76 SCHURTER Inc. 486-1219-ND Digikey $3.80 FUSEHOLDER BLOCKS - PCB - CLIP C 5 $0.61 W\u00fcrth Elektronik 696108003002 Digikey $3.05 BME 280- Humidity, Temperature, and Pressure sensor 4 $4.03 Bosch Sensortec BME280 Digikey $16.12 Multilayer Ceramic Capacitors MLCC - SMD/SMT 100V .1uF X7R 0805 1 0% 20 $0.13 Kyocera AVX KGM21AR72A104KU Mouser Electronics $2.60 RES 4.7K OHM 5% 1/16W 0402 20 $0.10 YAGEO RC0402JR-074K7L Digikey $2.00 LED RED DIFFUSED GULL WING SMD 5 $2.01 Broadcom Limited HLMP-Q150-F0011 Digikey $10.05 LED BLUE ROUND 4SMD 25 $1.20 Broadcom Limited ALMD-CB1E-VW002 Digikey $30.00 220 Ohms \u00b11% 2W Chip Resistor 2512 (6332 Metric) Moisture Resistant Thick Film 25 $0.88 Stackpole Electronics Inc RHC2512FT220R Digikey $22.00 Junction box enclosure.  5.9\"D x 10.6\"W x 14.6\"H 1 $49.99 Gratury G Amazon $49.99 SENSOR DIGITAL -40C-125C SOT23-5 5 $1.15 Microchip Technology TC74A4-3.3VCTTR Digikey $5.75 CAP CER 1UF 10V X7R 0603 25 $0.08 Samsung Electro-Mechanics CL10B105KP8NNNC Digikey $2.00 DRV8838DSGR Motor Driver 5 $1.03 Texas Instruments DRV8838DSGR Digikey $5.15 DC Motor (3-6V) 5 $2.95 Adafruit Industries LLC 3777 Digikey $14.75 ESP32 Microcontroller 5 $5.06 Espressif Systems ESP32-S3-WROOM-1-N4 Digikey $25.30 10kOhm Resistor 25 $0.10 YAGEO RC1206FR-1310KL Digikey $2.50 5.1kOhm Resistor 25 $0.10 YAGEO RC0805JR-075K1L Digikey $2.50 Micro USB port 5 $1.02 Kycon, Inc. KMMX-BSMT35S-B30TR Digikey $5.10 22 uF Ceramic Capacitor 25 $0.13 Samsung Electro-Mechanics CL21A226KQCLRNC Digikey $3.25 Push button 20 $0.18 Same Sky (Formerly CUI Devices) TS04-66-50-BK-160-SMT Digikey $3.60 Female header pins 5 $2.95 Adafruit Industries LLC 598 Digikey $14.75 Male header pins 9 $0.87 W\u00fcrth Elektronik 61301611121 Digikey $7.83"},{"location":"BlockDiag/","title":"Block Diagram","text":"<p>This semster we are challenged with the task to be proactive instead of reactive to wildfires. We came up with the idea to plant modules housing many inviormential sensors to monitor weather conditions. This is our teams Bock Diagram for our consept. </p>"},{"location":"charts/","title":"Charts","text":"<pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];</code></pre> <pre><code>sequenceDiagram\n  autonumber\n  Alice-&gt;&gt;John: Hello John, how are you?\n  loop Healthcheck\n      John-&gt;&gt;John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts!\n  John--&gt;&gt;Alice: Great!\n  John-&gt;&gt;Bob: How about you?\n  Bob--&gt;&gt;John: Jolly good!</code></pre> <pre><code>stateDiagram-v2\n  state fork_state &lt;&lt;fork&gt;&gt;\n    [*] --&gt; fork_state\n    fork_state --&gt; State2\n    fork_state --&gt; State3\n\n    state join_state &lt;&lt;join&gt;&gt;\n    State2 --&gt; join_state\n    State3 --&gt; join_state\n    join_state --&gt; State4\n    State4 --&gt; [*]</code></pre>"},{"location":"concept_gen/","title":"Ideation and Concept Generation","text":""},{"location":"concept_gen/#learning-about-wildfire-response-potential-stakeholders","title":"Learning about Wildfire Response &amp; Potential Stakeholders","text":"<p>The goal of our project is to provide a proactive approach to wildfire management and suppression. During the in-class stakeholder interview, the stakeholder spokesperson detailed that they only conduct a reactive approach to fighting wildfires; drones are only utilized to capture visual, thermal, and atmospheric details of an ongoing wildfire. Furthermore, the drones\u2019 battery life only lasts for an hour, which limits the amount of data that can be collected. The spokesperson detailed that they receive predictive weather information from an outside organization, but did not describe how they process or utilize that information, or how long it takes for that information to be given. With the increasing unpredictability of weather phenomena, it is important that these extreme weather/environmental organizations have accurate, real-time data available. </p> <p>Thus, Project Firesight's purpose is to create a wireless weather station network that will measure and transmit real-time weather data to a main control panel. Each weather station will measure atmospheric details, such as wind speed, air humidity, ground &amp; air temperature, ground moisture, and more. This data will be sent to a primary control panel, which will have indicator LEDs to alert to the status of each weather station and indicate whether the area it is in is susceptible to wildfires. </p> <p>The audience for our project is both in academia and in industry. These stakeholders are our professor, Dr. Dajiang Suo, our teaching assistants, the State of Arizona\u2019s Department of Forestry and Fire Management, local fire departments, local, state, and/or federal environmental agencies, environmental or wildlife research groups, and local residential communities. Our stakeholders can even extend to Arizona\u2019s state government, as extreme wildfires can produce a domino effect of consequences that affect Arizona as a whole. </p>"},{"location":"concept_gen/#idea-generation-sort-rank-recombine-group","title":"Idea Generation - Sort, Rank, Recombine, Group","text":"<p>The brainstorming process generated a total of 120 ideas. During the process, no idea was dismissed in order to encourage creative thinking. The ideas generated ranged from the type of sensors to use, how to use them, how the system will function, etc. The figure below depicts all of the ideas generated during this process. </p> <p></p> <p>Afterwards, the generated ideas were sorted based on similar themes. The themes chosen were Life Cycle, Sensors/Data, Structure/Ergonomics, Communication, Prevention, and Response. The figure below depicts all of the ideas after being sorted. The 'Life Cycle' grouping is not shown due to issues with image size.</p> <p></p> <p>The ideas were then ranked based on how feasible they are, which was determined by budget constraints, time constraints, and if they satisfied the stakeholder needs (durability, survivability, and wireless real-time data). The figure below depicts the ranked ideas, which have a 'fire' emoji on them. </p> <p></p> <p>Afterwards, the ranked ideas were improved upon, recombined, and finally grouped into our final product: a wireless weather station with a LED &amp; HMI control panel. The figure below depicts the final grouping. </p> <p></p> <p>Finally, a concept prototype was built out of everyday materials to envision Project Firesight. The figure below depicts the concept sketch/prototype. </p> <p></p> <p>The features in our concept sketch satisfy the needs for wildfire response organizations by providing real-time data through wireless communication and the incorporation of a durable mechanical casing. </p> <p>The wireless communication significantly reduces the amount of physical interaction between the product and the environment, satisfying the need for environmental protection. </p> <p>The real-time data provides the opportunity for wildfire-related organizations to develop a proactive response, which increases the efficiency by which wildfire organizations can complete their duties. </p> <p>Furthermore, the mechanical protection, underground features, and durability of the product ensures that it will survive in extreme weather conditions, which satisfies the need for a reliable &amp; durable product. </p> <p>The workload for Project Firesight was divided into five subsystems that will be distributed evenly amongst the five teammates. These five subsystems are, Sensors, Mechanical Casing/Structures, ESP-NOW Communication, Power Supply, and Control Panel. It was foreseen that the sensor subsystem will require more attention, so the team decided to combine the sensor and power supply to a two-person team. The sensors will be communicating with the main control panel continuously. This panel will show when certain thresholds are met and have an indicator to when a certain area becomes a threat for a wildfire. The control panel will be a grid of LED lights that correspond to the type of sensor on the columns and the area that the sensor is in on the rows. The last LED in each row will indicate if an area is deemed wildfire-susceptibile. </p> <p>Our product will include labels on the control panel for each LED and each row, which indicate their function. The \u2018wildfire susceptible\u2019 LEDs (which indicate if the area the station is in is wildfire susceptible) will \u201cbreathe\u201d using PWM at varying speeds to indicate the intensity of the susceptibility. As a stretch goal, our product could include a buzzer for added intensity indication if time permits.</p> <p>Project Firesight will include an HMI screen to interface with the control panel. This HMI screen would adjust the sensor threshold value, as weather variables and conditions to produce a wildfire can vary with time. </p> <p>Durability, safety, and comfort will be very important to the end product because the installment of our modules is in remote and hard to reach areas, which is not something anyone wants to do twice. Durability during any sort of weather these areas can throw at us is of utmost importance, as no data can be transmitted if the station is incapacitated. Project Firesight will make sure wildlife does not interact with the product, as a curious animal may be able to destroy the product. Most importantly, the product must not be harmful to any ecosystems that it is within. </p> <p>Project Firesight will need to be installed manually, and reaching the remote forest can be a challenge. In addition, the modules will have to be calibrated to each other and confirm that all the modules are functioning together and communicating to the main control panel. To conduct this effectively, an instruction and maintenance manual will be provided that will cover the specifics.</p> <p>Below is a YouTube presentation on Project Firesight's idea generation process:</p>"},{"location":"esp-32-table/","title":"ESP32 Table","text":"ESP Info Answer Help Model ? Include the entire part number (leave off any letters at the end that specify the package type) Product Page URL ? Found on Espressif.com ESP32-S3-WROOM-1-N4 Datasheet URL ? Do not paste links directly into the table.  Use a link ESP32 S3 Datasheet URL ? Has more detail on functions ESP32 S3 Technical Reference Manual URL ? Has details on I/O multiplexing, USB, and others Vendor link ? Digikey, Jameco, etc.  Do not paste links directly into the table.  Use a link Code Examples ? url(s) for libraries on github or other sites related to the microcontroller and your planned peripherals External Resources URL(s) ? Search on Google and YouTube for other resources for each specific microcontroller. Unit cost ? Find on Digikey, Jameco, MPJA, or octopart Absolute Maximum Current for entire IC ? Find in the microcontroller datasheet Supply Voltage Range ? Min / Nominal / Max / Absolute Max, as found in datasheet Absolute Maximum current  (for entire IC) ? as found in datasheet Maximum GPIO current  (per pin) ? as found in datasheet Supports External Interrupts? ? as found in datasheet Required Programming Hardware, Cost, URL ? as found in datasheet Module # Available Needed Associated Pins (or * for any) UART ? ? ? external SPI* ? ? ? I2C ? ? ? GPIO ? ? ? ADC ? ? ? LED PWM ? ? ? Motor PWM ? ? ? USB Programmer ? 1 ? ... <p>* The ESP32-S2 has multiple SPI interfaces, but some are for internal use</p>"},{"location":"pic-table/","title":"PIC Table","text":"ESP Info Answer Help Model ? Include the entire part number (leave off any letters at the end that specify the package type) Product Page URL ? Do not paste links directly into the table.  Use a link Datasheet URL(s) ? Do not paste links directly into the table.  Use a link Application Notes URL(s) ? Do not paste links directly into the table.  Use a link Vendor link ? Digikey, Jameco, etc.  Do not paste links directly into the table.  Use a link Code Examples ? url(s) for libraries on github or other sites related to the microcontroller and your planned peripherals External Resources URL(s) ? Search on Google and YouTube for other resources for each specific microcontroller. Unit cost ? Find in the Microchip online store, or Digikey Absolute Maximum Current for entire IC ? Find in the microcontroller datasheet Supply Voltage Range ? Min / Nominal / Max / Absolute Max, as found in datasheet Absolute Maximum current  (for entire IC) ? as found in datasheet Maximum GPIO current  (per pin) ? as found in datasheet Supports External Interrupts? ? as found in datasheet Required Programming Hardware, Cost, URL ? found on the microcontroller's product page Works with MPLabX? ? Required.  See Microchip Development Tools Works with Microchip Code Configurator? ? Can be validated in MPLabX.  Screenshot required. Module # Available Needed Associated Pins (or * for any) GPIO ? ? ? ADC ? ? ? UART ? ? ? SPI ? ? ? I2C ? ? ? PWM ? ? ? ICSP ? 1 ? ... ... ... ..."},{"location":"second-page/","title":"Second Page","text":"<p>Things to discuss</p>"},{"location":"team-schematic/","title":"Team Schematic","text":"<p>The team schematic is split into two -- one for the main control panel and one for the weather stations. The figures below show each schematic</p>"},{"location":"team-schematic/#main-control-panel-circuit","title":"Main Control Panel Circuit","text":"<p>Figure 1: Control Panel Schematic</p> <p></p>"},{"location":"team-schematic/#weather-station-circuit","title":"Weather Station Circuit","text":"<p>Figure 2: Weather Station Schematic</p> <p></p>"},{"location":"teamorg/","title":"Team Organization","text":"<p>The team organization outlines team goals, team charter, and the product mission statement</p>"},{"location":"teamorg/#team-goals","title":"Team Goals","text":"<p>Team goals were determined through discussion, in which the common goals were highlighted and chosen. Below are a selection of the team goals common amongst all of the members. For a detailed list of all team goals, please see the Team Organization Appendix. </p> <ul> <li> <p>Create a product that allows our stakeholders to PROACTIVELY fight wildfires, particularly through multiple mini-weather stations that send data back to a control panel. </p> </li> <li> <p>Successfully integrate wireless data communication into the final product</p> </li> <li> <p>Create at least two mini weather stations that successfully send data back to the control panel. </p> </li> <li> <p>Accurately depict a wildfire susceptible area by using at least three different sensors</p> </li> <li> <p>Create a product that operates and runs successfully for at least three months while staying under the $300 budget</p> </li> <li> <p>Successfully integrate at least five subsystems with the main control panel</p> </li> <li> <p>Create a product that can withstand temperatures up to 1500 degrees Fahrenheit</p> </li> <li> <p>Create a product that withstands wind gusts up to 120 miles per hour</p> </li> <li> <p>Create a product that blends in with the evnironment to prevent wildlife engagement</p> </li> <li> <p>Create a product that does not interfere with the environment, ecosystem, or any local, state, and federal rules and regulations</p> </li> </ul> <p>These goals were determined by the information presented at the stakeholder interview, and was further refined during discussions in class and in team meetings. As the stakeholder conducts only a reactive approach to fighting wildfires, Team [name TBD] is focused on developing a proactive approach. In this way, the stakeholder can predict potential wildfire spots before they happen, thereby increasing their wildfire detection efficiency.  </p> <p>These goals will help Team [name TBD] in academia and in industry, as it further develops technical, project management, and teammwork skills, all of which are important in the work force and future academic pursuits. </p>"},{"location":"teamorg/#team-charter","title":"Team Charter","text":"<p>The team charter is a summary statement of the project goals, which was determined after discussion with the stakeholders, professors &amp; TA's, and internal team discussions.</p> <p>Team [name TBD] will design and build a cost-effective mini weather station network for the Arizona Department of Forestry and Wildfire Management. The system will consist of at least two wireless, sensor-equipped stations integrated with a central control panel to identify wildfire-susceptible areas and support proactive suppression. Operating for at least three months on a $300 budget, the product will integrate at least five subsystems, withstand extreme conditions (1500\u00b0F, 120 mph winds), and remain environmentally compliant while blending into natural surroundings.</p>"},{"location":"teamorg/#product-mission-statement","title":"Product Mission Statement","text":"<p>The product mission statement details the purpose and direction of Project [name TBD], which was determined through discussion with the stakeholders, professors &amp; TA's, and multiple internal team discussions. </p> <p>The mission of Project [name TBD] is to design, build, debug, and test a wireless weather station network for the State of Arizona's Department of Forestry and Wildfire Management, with the purpose of predicting susceptible wildfire areas to proactively improve wildfire detection &amp; suppression, thereby decreasing wildfire suppression time.</p>"},{"location":"appendix/","title":"Appendix","text":"<p>to be added throughout the semester </p>"},{"location":"appendix/01_subpage/","title":"Team Organization","text":""},{"location":"appendix/01_subpage/#team-goals","title":"Team Goals","text":"<ul> <li> <p>Further enhance the technical and project management skills developed in the previous course, EGR304</p> </li> <li> <p>Further enhance and develop a basic understanding of the product development process</p> </li> <li> <p>Gain an intermediary mastery of creating an electromechanical system</p> </li> <li> <p>Create a product that allows our stakeholders to PROACTIVELY fight wildfires, particularly through multiple mini-weather stations that send data back to a control panel. </p> </li> <li> <p>Successfully integrate wireless data communication into the final product</p> </li> <li> <p>Create at least two mini weather stations that successfully send data back to the control panel. </p> </li> <li> <p>Accurately depict a wildfire susceptible area by using at least three different sensors</p> </li> <li> <p>Create a product that operates and runs successfully for at least three months while staying under the $300 budget</p> </li> <li> <p>Successfully integrate at least five subsystems with the main control panel</p> </li> <li> <p>Create a product that can withstand temperatures up to 1500 degrees Fahrenheit</p> </li> <li> <p>Create a product that withstands wind gusts up to 120 miles per hour</p> </li> <li> <p>Create a product that blends in with the evnironment to prevent wildlife engagement</p> </li> <li> <p>Create a product that does not interfere with the environment, ecosystem, or any local, state, and federal rules and regulations</p> </li> </ul>"},{"location":"component-selection-template/","title":"Component Selection Template","text":""},{"location":"component-selection-template/#examples","title":"Examples","text":""},{"location":"component-selection-template/#style-1","title":"Style 1","text":"<p>This is the example found in the assignment, uses more html</p> <p>Table 1: Example component selection</p> <p>External Clock Module</p> Solution Pros Cons Option 1. XC1259TR-ND surface mount crystal$1/eachlink to product * Inexpensive[^1]* Compatible with PSoC* Meets surface mount constraint of project * Requires external components and support circuitry for interface* Needs special PCB layout. * Option 2. * CTX936TR-ND surface mount oscillator * $1/each * Link to product * Outputs a square wave * Stable over operating temperature  * Direct interface with PSoC (no external circuitry required) range * More expensive * Slow shipping speed <p>Choice: Option 2: CTX936TR-ND surface mount oscillator</p> <p>Rationale: A clock oscillator is easier to work with because it requires no external circuitry in order to interface with the PSoC. This is particularly important because we are not sure of the electrical characteristics of the PCB, which could affect the oscillation of a crystal. While the shipping speed is slow, according to the website if we order this week it will arrive within 3 weeks.</p>"},{"location":"component-selection-template/#style-2","title":"Style 2","text":"<p>Also acceptable, more markdown friendly</p> <p>External Clock Module</p> <ol> <li> <p>XC1259TR-ND surface mount crystal</p> <p></p> <ul> <li>$1/each</li> <li>link to product</li> </ul> Pros Cons Inexpensive Requires external components and support circuitry for interface Compatible with PSoC Needs special PCB layout. Meets surface mount constraint of project </li> <li> <p>CTX936TR-ND surface mount oscillator</p> <p></p> <ul> <li>$1/each</li> <li>Link to product</li> </ul> Pros Cons Outputs a square wave More expensive Stable over operating temperature Slow shipping speed Direct interface with PSoC (no external circuitry required) range </li> </ol> <p>Choice: Option 2: CTX936TR-ND surface mount oscillator</p> <p>Rationale: A clock oscillator is easier to work with because it requires no external circuitry in order to interface with the PSoC. This is particularly important because we are not sure of the electrical characteristics of the PCB, which could affect the oscillation of a crystal. While the shipping speed is slow, according to the website if we order this week it will arrive within 3 weeks.</p>"},{"location":"component_selection/","title":"Component Selection","text":""},{"location":"component_selection/#subsystem-1-power","title":"Subsystem 1: Power","text":"<p>Table 1: Power Component Selection</p>"},{"location":"component_selection/#bucking-voltage-regulator","title":"Bucking Voltage Regulator","text":"<ol> <li> <p>LM2575M-3.3 Bucking Voltage Regulator</p> <p></p> <ul> <li>$0.94/each</li> <li>Product Link</li> </ul> Pros Cons Relatively solder friendly Generates switching noise ripple No heat sink required in some designs Limited to 1A output Efficiency drops under light loads </li> <li> <p>LM7805MPX/NOPB Bucking Voltage Regulator</p> <p></p> <ul> <li>$1.43/each</li> <li>Product Link</li> </ul> Pros Cons Very low noise output Poor efficiency at high voltages Doesn't require many external components Limited to 1A output Widely available and inexpensive </li> <li> <p>LM2596S-(5.0/3.3V)/NOPB Bucking Voltage Regulator</p> <p></p> <ul> <li>$6.97/each</li> <li>Product Link</li> </ul> Pros Cons High efficiency at moderate to high current Generates switching noise Has a shutdown feature Feedback trace must be isolated Widely used, readily available reference designs May be difficult to solder </li> </ol> <p>Choice: LM2596S-(5.0/3.3V)/NOPB Bucking Voltage Regulator</p> <p>Rationale: The best choice is the LM2596S/NOPB for 5V output and 3.3V as it has a high efficiency at a much higher current load (3A), incorporates a shutdown feature, and is widely used with available reference designs. The high current load is better suited for our project as we will be using a small DC motor to close the underground PCB box in the event of extreme weather conditions. Furthermore, the shutdown feature can be used to turn off all critical components in the event that the underground PCB box must close.</p>"},{"location":"component_selection/#subsystem-2-sensors","title":"Subsystem 2: Sensors","text":"<p>Table 2: Sensor Component Selection</p>"},{"location":"component_selection/#atmospheric-sensors","title":"Atmospheric Sensors","text":"<ol> <li> <p>BME 280 - Humidity, Temperature, and Pressure Sensor</p> <p></p> <ul> <li>$4.03/each</li> <li>Product Link</li> </ul> Pros Cons Low power consumption Sensitive to harsh weather Senses 3 data types More complex coding API library available for use on github </li> <li> <p>AMG8833-Temperature IR Sensor</p> <p></p> <ul> <li>$1.43/each</li> <li>Product Link</li> </ul> Pros Cons Very low noise output Poor efficiency at high voltages Doesn't require many external components Limited to 1A output Widely available and inexpensive </li> <li> <p>SHT31-DIS-B2.5KS - Humidity &amp; Temperature Sensor</p> <p></p> <ul> <li>$4.01/each</li> <li>Product Link</li> </ul> Pros Cons Two distinctive, user selectable I2C addresses Generates switching noise Wide input voltage range Feedback trace must be isolated NIST traceable measurements (industry standard) May be difficult to solder </li> </ol> <p>Choice: BME 280 - Humidity, Temperature, and Pressure Sensor</p> <p>Rationale: The best choice for this subsystem is the BME 280 as it senses multiple variables within one package, which prevents I2C bus problems. The code is intensive, but an API library is available on github and the datasheet offers code examples to follow.  </p>"},{"location":"component_selection/#subsystem-3-control-panel","title":"Subsystem 3: Control Panel","text":"<p>Table 3: Red LED Component Selection</p>"},{"location":"component_selection/#wildfire-susceptibilite-indicating-led","title":"Wildfire Susceptibilite Indicating LED","text":"<ol> <li> <p>HLMP-Q150-F0011 Red LED</p> <p></p> <ul> <li>$2.01/each</li> <li>Product Link</li> </ul> Pros Cons Easiest to solder Expensive High visibility Takes up space Heat resistant </li> <li> <p>SML-D12U1WT86 LED</p> <p></p> <ul> <li>$0.12/each</li> <li>Product Link</li> </ul> Pros Cons Inexpensive Vulnerable to thermal cycling Compact Difficult to solder Very bright for its size </li> <li> <p>APT2012SURCK LED</p> <p></p> <ul> <li>$0.20/each</li> <li>Product Link</li> </ul> Pros Cons Low power consumption Difficult to solder Small footprint Fragile Vibrant red, suitable for status indication </li> </ol> <p>Choice: HLMP-Q150-F0011 Red LED</p> <p>Rationale: Option 1 is the best choice for our design because it\u2019s the least fragile and easiest to manually solder of the 3. Furthermore, having the highest visibility possible is important for warning the user of wildfire susceptibility.</p> <p>Table 4: Sensor LED Component Selection</p>"},{"location":"component_selection/#sensor-threshold-leds","title":"Sensor Threshold LEDs","text":"<ol> <li> <p>XL-1606UBC LED</p> <p></p> <ul> <li>$0.01042/each</li> <li>Product Link</li> </ul> Pros Cons Inexpensive Difficult to solder by hand Compact footprint Lower visibility Low power consumption </li> <li> <p>ALMD-CB1E-VW002 LED</p> <p></p> <ul> <li>$1.20/each</li> <li>Product Link</li> </ul> Pros Cons Low power consumption Takes up space Fast switching speed Limited viewing angle High brightness </li> <li> <p>150141RB73100 RGB LED</p> <p></p> <ul> <li>$0.34/each</li> <li>Product Link</li> </ul> Pros Cons RGB LED Thermal management complications Compact Requires multiple control channels Vibrant red, suitable for status indication </li> </ol> <p>Choice: ALMD-CB1E-VW002 Blue LED</p> <p>Rationale: Option 2 is the best choice for sensor threshold indication (humidity, temperature, wind direction) because of its low power consumption and high visibility. Furthermore, the RGB function of option 3 would go unused, making the further subsystem design complications unnecessary.</p>"},{"location":"component_selection/#subsystem-4-mechanical-casing-inner-casing-temperature","title":"Subsystem 4: Mechanical Casing &amp; Inner Casing Temperature","text":"<p>Table 5: Mechanical Casing Selection</p>"},{"location":"component_selection/#mechanical-casing","title":"Mechanical Casing","text":"<ol> <li> <p>High-grade ABS material</p> <p></p> <ul> <li>$49.99/each</li> <li>Product Link</li> </ul> Pros Cons Weatherproof &amp; waterproof Not fireproof Mounting panel included for easy PCB installation Not lightning proof Lightweight </li> <li> <p>Diecast Aluminum</p> <p></p> <ul> <li>$43.29/each</li> <li>Product Link</li> </ul> Pros Cons IP66 Rated Heavy IP66 Gasket included Hard to modify/drill into Powder Coated Black Not fireproof </li> <li> <p>Fireproof Box</p> <p></p> <ul> <li>$42.50/each</li> <li>Product Link</li> </ul> Pros Cons Fireproof Expensive Waterproof Heavy Durable Thick walls </li> </ol> <p>Choice: High-grade ABS </p> <p>Rationale: The high-grade ABS will be the best material and composition as it is waterproof to help with groundwater. Furthermore, it already has a PCB mounting method and it is easy to drill into to add our external sensors. Some people would argue that this is not the best option because it is not fireproof. This problem is solved by burying the box at least 1 foot underground. This will keep our electronics safe in the event of a wildfire. It is also the cheapest option.</p> <p>Table 6: Inner Casing Temperature Sensor Selection</p>"},{"location":"component_selection/#inner-casing-temperature-sensor","title":"Inner Casing Temperature Sensor","text":"<ol> <li> <p>TC74A4-3.3VCTTR Temperature Sensor</p> <p></p> <ul> <li>$1.15/each</li> <li>Product Link</li> </ul> Pros Cons Cheap Fragile Fairly accurate error margin up to 3 degrees Fairly simple to solder </li> <li> <p>SLTM20W87F Temperature Sensor</p> <p></p> <ul> <li>$0.76/each</li> <li>Product Link</li> </ul> Pros Cons Cheap Fragile Measures up to 130 degrees Celsius Older I2C timing Easy to solder Slow temperature updates </li> <li> <p>AS6218-AWLT-L Temperature Sensor</p> <p></p> <ul> <li>$1.09/each</li> <li>Product Link</li> </ul> Pros Cons Measures up to 125 degrees Celsius Fragile Accurate up to 0.8 degrees Celsius Could be hard to solder Can mount straight to PCB </li> </ol> <p>Choice: TC74A4-3.3VCTTR Temperature Sensor </p> <p>Rationale: The component we are going with is the TC74 because we have stock of this sensor and will not cost us to use. It will meet all the requirements needed for this sensor. If we did not have this sensor in stock the best option would be the SLTM20 due to it being the most resistant to high temperatures, has a better accuracy than the TC74, and is the cheapest unit.</p>"},{"location":"component_selection/#inner-casing-motor-driver","title":"Inner Casing Motor Driver","text":"<p>Table 7: Inner Casing Motor Driver Selecction</p> <ol> <li> <p>TI DRV8835 Motor Driver</p> <p></p> <ul> <li>$1.95/each</li> <li>Product Link</li> </ul> Pros Cons Cheap Lower top motor voltage Low Voltage Operation (VM input: 0-11V) Lots of pins to solder 1.5A continuous current </li> <li> <p>TI DRV8833 Motor Driver</p> <p></p> <ul> <li>$2.18/each</li> <li>Product Link</li> </ul> Pros Cons Built in current regulation Will shutdown at consistent high load Over temperature protection features Uses more MCU pins than others Compatible with 3.3V logic </li> <li> <p>TI DRV8838 Motor Driver</p> <p></p> <ul> <li>$1.03/each</li> <li>Product Link</li> </ul> Pros Cons Does not take up a lot of MCU I/O Solder using heat plate Up to 1.8A continuous current No stall handling built in Built in protections Needs good copper traces </li> </ol> <p>Choice: TI DRV8838 Motor Driver </p> <p>Rationale: The best choice is the TI DRV8838 Motor Driver as it satisfies our basic project needs while having manageable cons compared to other choices. Even though it will require a heat plate to solder and needs good copper traces, these can be easily learned and implemented. In contrast, a motor driver that will shutdown at a consistent high load or use more MCU pins could lead to substantial issues. Furthermore, this motor driver has slightly more headroom on continuous current. </p>"},{"location":"component_selection/#subsystem-5-wireless-communication","title":"Subsystem 5: Wireless Communication","text":"<p>Table 8: Wireless Communication Selection</p>"},{"location":"component_selection/#wireless-communication","title":"Wireless Communication","text":"<ol> <li> <p>ESP-NOW</p> <p></p> <ul> <li>N/A cost</li> <li>Product Link</li> </ul> Pros Cons Low latency Only pairs up to 20 devices Simple API (no low level programming) Only works with Espressif devices Easily integrates with ESP32 </li> <li> <p>ESP-MESH</p> <p></p> <ul> <li>N/A cost</li> <li>Product Link</li> </ul> Pros Cons Up to 10Mbps of data transfer Greater power consumption Mesh automatically forms More complex API Mesh self heals </li> <li> <p>Bluetooth (ESP-IDF)</p> <p></p> <ul> <li>N/A cost</li> <li>Product Link</li> </ul> Pros Cons Lots of documentation and examples Higher latency VS Code extension available Most complex API Security measures </li> </ol> <p>Choice: ESP-NOW </p> <p>Rationale: The best choice for wireless communication is ESP-NOW. Although it can only pair with up to 20 Espressif devices, our network topology only requires a single device to pair with four other ESP32s. Furthermore, the setup code is simpler compared to other communication protocols and has a lower latency, which is important for real-time wildfire prediction and detection.</p>"},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#mathjax","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\n  loader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\n  const svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\n  console.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"},{"location":"subfolder/","title":"This is the index to a subfolder","text":"<p>Things to discuss</p>"},{"location":"subfolder/another-subfile/","title":"This is a secondary sub page","text":"<p>Things to discuss</p>"}]}